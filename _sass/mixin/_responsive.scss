$casual_screen: 1024px;
$nav_breakpoint: 935px;
$small-screen: 768px;
$medium-screen: 1280px;
$large-screen: 1440px;

$below_casual: "only screen and (max-width:"#{$casual_screen}")";
$casual: "only screen and (min-width:"#{$casual_screen}")";
$below_nav: "only screen and (max-width:"#{$nav_breakpoint}")";
$ipad: "only screen and (min-width:"#{$small-screen}") and (max-width: "#{$casual_screen}")";

$below_small: "only screen and (max-width:"#{$small-screen}")";
$below_medium: "only screen and (max-width:"#{$medium-screen}")";
$below_large: "only screen and (max-width:"#{$large-screen}")";

@mixin respond-to($media) {
  /* Landscape phones and down */
  @if $media == phone {
    @media (max-width: 480px) { @content; }
  }
    /* Landscape phone to portrait tablet */
  @else if $media == tablet-portrait {
    @media (min-width: 481px) and (max-width: 768px) { @content; }
  }
    /* Portrait tablet to landscape */
  @else if $media == tablet-landscape {
    @media (min-width: 769px) and (max-width: 1024px) { @content; }
  }
    /* Desktop */
  @else if $media == desktop {
    @media (min-width: 1025px) and (max-width: 1440px) { @content; }
  }
    /* Large desktop */
  @else if $media == large-desktop {
    @media (min-width: 1441px) { @content; }
  }

    // Bootstrap specific breakpoints

  @else if $media == xs {
    @media (max-width: 767px) { @content; }
  }

  @else if $media == sm {
    @media (min-width: 768px) and (max-width: 991px) { @content; }
  }

  @else if $media == md {
    @media (min-width: 992px) and (max-width: 1199px) { @content; }
  }

  @else if $media == lg {
    @media (min-width: 1200px) { @content; }
  }

    // Non-Retina
  @else if $media == non-retina {
    @media screen and (-webkit-max-device-pixel-ratio: 1) { @content; }
  }
    // Retina Only
  @else if $media == retina {
    @media screen and (-webkit-min-device-pixel-ratio: 2) { @content; }
  }
    // Specific max width
  @else {
    @media only screen and (max-width: #{$media}px) { @content; }
  }

}

@mixin respondto($media...) {
  @each $mediatype in $media {
    @include respond-to($mediatype) {@content}
  }
}
